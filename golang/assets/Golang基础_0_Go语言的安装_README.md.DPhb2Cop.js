import{_ as s,c as a,o as i,a1 as t}from"./chunks/framework.rLRl8Q3O.js";const e="/assets/image-20200718111751694.I9L7xbLV.png",n="/assets/image-20200718111822269.CF9v2U7W.png",l="/assets/image-20200718151418230.CYq_D7Qy.png",p="/assets/image-20200718151503318.jPTZFsbo.png",o="/assets/image-20200718112254366.B6b08jQb.png",h="/assets/image-20200718150736688.Dbl8DIVV.png",r="/assets/image-20200718151701767.D8hTcs_q.png",d="/assets/image-20200718151733127.D92MxEE4.png",g="/assets/image-20200718151850083.vnQxgEue.png",f=JSON.parse('{"title":"Windows下Go语言的安装","description":"","frontmatter":{},"headers":[],"relativePath":"Golang基础/0_Go语言的安装/README.md","filePath":"Golang基础/0_Go语言的安装/README.md"}'),c={name:"Golang基础/0_Go语言的安装/README.md"},k=t('<h1 id="windows下go语言的安装" tabindex="-1">Windows下Go语言的安装 <a class="header-anchor" href="#windows下go语言的安装" aria-label="Permalink to &quot;Windows下Go语言的安装&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>这阵子因为以后工作的原因，所以开始了go语言的学习之旅，工欲善其事必先利其器，首先就得把go语言环境搭建完成</p><h2 id="下载go" tabindex="-1">下载Go <a class="header-anchor" href="#下载go" aria-label="Permalink to &quot;下载Go&quot;">​</a></h2><p>因为go语言的官网经常打不开，所以我就找了一个 <a href="https://studygolang.com/dl" target="_blank" rel="noreferrer">镜像网站</a>，里面有很多版本的Go语言，选择自己合适的，比如我的是Windows电脑，所以我选中里面的Windows版本的</p><p><img src="'+e+'" alt="image-20200718111751694"></p><p>下载完成是一个安装文件，我们需要进行安装，同时需要注意的就是安装目录，因为事后还需要配置环境变量，下面是安装成功后的图片</p><p><img src="'+n+'" alt="image-20200718111822269"></p><h2 id="配置环境变量" tabindex="-1">配置环境变量 <a class="header-anchor" href="#配置环境变量" aria-label="Permalink to &quot;配置环境变量&quot;">​</a></h2><p>根据windows系统在查找可执行程序的原理，可以将Go所在路径定义到环境变量中，让系统帮我们去找运行的执行程序，这样在任何目录下都可以执行go指令，需要配置的环境变量有：</p><table tabindex="0"><thead><tr><th>环境变量</th><th>说明</th></tr></thead><tbody><tr><td>GOROOT</td><td>指定SDK的安装目录</td></tr><tr><td>Path</td><td>添加SDK的/binmulu</td></tr><tr><td>GOPATH</td><td>工作目录</td></tr></tbody></table><p>首先我们需要打开我们的环境变量，然后添加上GOROOT</p><p><img src="'+l+'" alt="image-20200718151418230"></p><p>然后我们在PATH上添加我们的bin目录</p><p><img src="'+p+'" alt="image-20200718151503318"></p><p>添加完成后，我们输入下面的命令，查看是否配置成功</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p><img src="'+o+'" alt="image-20200718112254366"></p><h2 id="下载jetbrain下的golang" tabindex="-1">下载Jetbrain下的GoLang <a class="header-anchor" href="#下载jetbrain下的golang" aria-label="Permalink to &quot;下载Jetbrain下的GoLang&quot;">​</a></h2><p>在我们配置好环境，我们就可以使用Jetbrain公司开发的Goland编辑器了，首先进入官网下载</p><p><a href="https://www.jetbrains.com/" target="_blank" rel="noreferrer">https://www.jetbrains.com/</a></p><p>下载完成后，进行启动</p><p><img src="'+h+'" alt="image-20200718150736688"></p><p>启动完成后，我们需要配置一下环境，点击：File -&gt;settings -&gt; GOROOT，配置一下刚刚go安装的目录</p><p><img src="'+r+'" alt="image-20200718151701767"></p><p>以及GOPATH项目所在的目录</p><p><img src="'+d+`" alt="image-20200718151733127"></p><h2 id="hello-world" tabindex="-1">hello world <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;hello world&quot;">​</a></h2><p>在上面的方法都完成以后，我来来输出hello world吧~</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>代码的说明</p><ul><li>go文件的后缀是.go</li><li>package main：表示该hello.go文件所在的包是main，在go中，每个文件都归属与一个包</li><li>import &quot;fmt&quot;：表示引入一个包，可以调用里面的函数</li><li>func main()：表示程序入口，是一个主函数</li></ul><p>输出结果</p><p><img src="`+g+`" alt="image-20200718151850083"></p><h2 id="编译和执行" tabindex="-1">编译和执行 <a class="header-anchor" href="#编译和执行" aria-label="Permalink to &quot;编译和执行&quot;">​</a></h2><p>我们可以通过使用下面命令进行编译和执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译 hello.go 后 会生成一个 hello.exe文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.go</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行 hello.ext</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hello.ext</span></span></code></pre></div><p>需要注意的是，我们也可以使用下面的方式，来直接运行的（使用go run会比较慢，因为内部有个编译的过程）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.go</span></span></code></pre></div><p>但是在生产环境中，是需要先编译在执行的</p>`,40),m=[k];function b(u,_,F,E,y,C){return i(),a("div",null,m)}const w=s(c,[["render",b]]);export{f as __pageData,w as default};
