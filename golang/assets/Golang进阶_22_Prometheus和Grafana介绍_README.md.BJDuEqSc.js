import{_ as a,c as e,o as s,a1 as t}from"./chunks/framework.CrMo2NI9.js";const r="/golang/assets/image-20200913185216706.BiL_Frhc.png",p="/golang/assets/image-20200913190154123.Zd_okocC.png",o="/golang/assets/image-20200913190213569.CP5ejIds.png",i="/golang/assets/image-20200913190307310.HIredN9n.png",n="/golang/assets/image-20200913190408222.OmCKiiDr.png",g="/golang/assets/image-20200913190444467.DSgs40oI.png",l="/golang/assets/image-20200913190726155.BapzpFeC.png",m="/golang/assets/image-20200913190824928.CwQZaJZj.png",h="/golang/assets/image-20200913191017753.DDOFyJTj.png",c="/golang/assets/image-20200913191249800.CCmPmgri.png",_="/golang/assets/image-20200913191312189.CkDzwYqK.png",d="/golang/assets/image-20200913191338347.2b5jSLm3.png",u="/golang/assets/image-20200913191444113.CmbnvXdJ.png",f="/golang/assets/image-20200913191803694.DJkLuZnW.png",b="/golang/assets/image-20200913191822529.BD0hzEvp.png",k="/golang/assets/image-20200913191854680.d7y3i63V.png",P="/golang/assets/image-20200913192017515.L1lY5fVP.png",v="/golang/assets/image-20200913192232698.DaWPQw6z.png",F=JSON.parse('{"title":"Prometheus和Grafana介绍","description":"","frontmatter":{},"headers":[],"relativePath":"Golang进阶/22_Prometheus和Grafana介绍/README.md","filePath":"Golang进阶/22_Prometheus和Grafana介绍/README.md"}'),C={name:"Golang进阶/22_Prometheus和Grafana介绍/README.md"},q=t('<h1 id="prometheus和grafana介绍" tabindex="-1">Prometheus和Grafana介绍 <a class="header-anchor" href="#prometheus和grafana介绍" aria-label="Permalink to &quot;Prometheus和Grafana介绍&quot;">​</a></h1><h2 id="系统监控" tabindex="-1">系统监控 <a class="header-anchor" href="#系统监控" aria-label="Permalink to &quot;系统监控&quot;">​</a></h2><p><a href="https://www.liwenzhou.com/posts/Go/go_gopsutil/" target="_blank" rel="noreferrer">gopsutil</a>：做系统监控信息的采集，写入influxDb，使用grafana作展示</p><p>prometheus：采集性能指标数据，使用grafana作展示</p><h2 id="prometheus" tabindex="-1">Prometheus <a class="header-anchor" href="#prometheus" aria-label="Permalink to &quot;Prometheus&quot;">​</a></h2><p><a href="https://github.com/prometheus/prometheus" target="_blank" rel="noreferrer">普罗米修斯</a>：专用于服务监控，主动去拉取数据</p><p><img src="'+r+'" alt="image-20200913185216706"></p><ul><li>Jobs/Exporters：任务，监控项</li><li>Serveice Discovery：服务发现</li><li>Short-lived jobs：短期存活的任务</li></ul><h3 id="下载普罗米修斯" tabindex="-1">下载普罗米修斯 <a class="header-anchor" href="#下载普罗米修斯" aria-label="Permalink to &quot;下载普罗米修斯&quot;">​</a></h3><p>去Github的<a href="https://github.com/prometheus/prometheus/releases/tag/v2.21.0" target="_blank" rel="noreferrer">官网</a>下载</p><p><img src="'+p+'" alt="image-20200913190154123"></p><p>下载完成后解压即可</p><p><img src="'+o+'" alt="image-20200913190213569"></p><p>双击 prometheus.exe启动，然后访问下面的地址</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://localhost:9090/graph</span></span></code></pre></div><p>进入到prometheus的图形化页面</p><p><img src="'+i+'" alt="image-20200913190307310"></p><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p><img src="'+n+'" alt="image-20200913190408222"></p><p>就能够看到我们的图形化信息了</p><p><img src="'+g+'" alt="image-20200913190444467"></p><p>通过上图我们发现，使用 prometheus的图形化界面好像不太美观，所以就引出了下面的 <a href="https://grafana.com/" target="_blank" rel="noreferrer">grafana</a></p><h2 id="grafana" tabindex="-1">grafana <a class="header-anchor" href="#grafana" aria-label="Permalink to &quot;grafana&quot;">​</a></h2><p>grafana是采用go语言编写的，非常美观的图形化展示，我们找到<a href="https://grafana.com/grafana/download?platform=windows" target="_blank" rel="noreferrer">官网下载</a>，选择window环境</p><p><img src="'+l+'" alt="image-20200913190726155"></p><p>解压后的目录，如下所示</p><p><img src="'+m+'" alt="image-20200913190824928"></p><p>我们进入bin目录，找到 grafana-server.exe 然后启动 【首次启动比较慢，需要建立数据库】，启动成功后，访问下面的地址</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http://127.0.0.1:3000</span></span></code></pre></div><p>即可进入到grafana的图形化页面了</p><p><img src="'+h+'" alt="image-20200913191017753"></p><p>然后输入admin admin 登录即可</p><p><img src="'+c+'" alt="image-20200913191249800"></p><p>然后选择普罗米修斯</p><p><img src="'+_+'" alt="image-20200913191312189"></p><p>然后输入url保存</p><p><img src="'+d+'" alt="image-20200913191338347"></p><p>然后导入我们的普罗米修斯的仪表盘</p><p><img src="'+u+'" alt="image-20200913191444113"></p><p>然后到Home目录下，选择 new board</p><p><img src="'+f+'" alt="image-20200913191803694"></p><p>选择刚刚的import 的 仪表信息</p><p><img src="'+b+'" alt="image-20200913191822529"></p><p>这样就生成了我们的仪表信息了</p><p><img src="'+k+'" alt="image-20200913191854680"></p><p>或者可以选择另外一个样式</p><p><img src="'+P+'" alt="image-20200913192017515"></p><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>如果我们要监控其它的一些服务，比如redis、mysql、Memcache等等，需要自己到官网下载对应的包</p><p><a href="https://prometheus.io/download/" target="_blank" rel="noreferrer">https://prometheus.io/download/</a></p><p><img src="'+v+'" alt="image-20200913192232698"></p>',51),x=[q];function D(w,E,G,y,S,A){return s(),e("div",null,x)}const T=a(C,[["render",D]]);export{F as __pageData,T as default};
